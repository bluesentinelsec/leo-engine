name: Build Leo Engine Runtime

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "**"

env:
  BUILD_DIR: build
  CMAKE_BUILD_TYPE: Debug
  LIB_OPTION: LEO_BUILD_SHARED=ON
  TEST_OPTION: LEO_BUILD_TESTS=ON

jobs:
  macos-arm64:
    name: macOS (arm64, clang)
    runs-on: macos-14 
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # If you need Homebrew deps, uncomment and edit:
      # - name: Install deps (brew)
      #   run: |
      #     brew update
      #     brew install ninja pkg-config <your-deps>

      - name: Configure (CMake)
        run: |
          cmake -S . -B build \
            -G Ninja \
            -DCMAKE_BUILD_TYPE="$CMAKE_BUILD_TYPE" \
            -D${LIB_OPTION} \
            -D${TEST_OPTION}

      - name: Build
        run: |
          cmake --build build --config "$CMAKE_BUILD_TYPE" --parallel
          # If you need specific targets:
          # cmake --build "$BUILD_DIR" --target your_target --parallel

  windows-x64:
    name: Windows (x64, MSVC cl.exe)
    runs-on: windows-2022
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build Debug (Static)
        shell: pwsh
        working-directory: runtime
        run: |
          cmake -S . -B build -G "Visual Studio 17 2022" -A x64 -DCMAKE_BUILD_TYPE=Debug -DLEO_BUILD_SHARED=OFF -DLEO_BUILD_TEST=ON
          cmake --build build --config "$env:CMAKE_BUILD_TYPE" --parallel
          .\build\Debug\test_leo_runtime.exe

      - name: Build Debug (Shared)
        shell: pwsh
        working-directory: runtime
        run: |
          cmake -S . -B build -G "Visual Studio 17 2022" -A x64 -DCMAKE_BUILD_TYPE=Debug -DLEO_BUILD_SHARED=ON -DLEO_BUILD_TEST=ON
          cmake --build build --config "$env:CMAKE_BUILD_TYPE" --parallel
          .\build\Debug\test_leo_runtime.exe

      - name: Package Debug
        shell: pwsh
        working-directory: runtime
        run: |
          mkdir LEO-0.1.0-windows-x64-msvc-debug\include\leo
          mkdir LEO-0.1.0-windows-x64-msvc-debug\lib\
          xcopy include\leo LEO-0.1.0-windows-x64-msvc-debug\include\leo /E /I /Y
          copy build\Debug\leo.dll LEO-0.1.0-windows-x64-msvc-debug\lib\
          copy build\Debug\leo.lib LEO-0.1.0-windows-x64-msvc-debug\lib\
          copy build\Debug\leo.pdb LEO-0.1.0-windows-x64-msvc-debug\lib\
          copy ..\LICENSE LEO-0.1.0-windows-x64-msvc-debug\LICENSE.txt
          copy README.md LEO-0.1.0-windows-x64-msvc-debug\
          tree /A /F LEO-0.1.0-windows-x64-msvc-debug

      - name: Build Release (Static)
        shell: pwsh
        working-directory: runtime
        run: |
          cmake -S . -B build -G "Visual Studio 17 2022" -A x64 -DCMAKE_BUILD_TYPE=Release -DLEO_BUILD_SHARED=OFF -DLEO_BUILD_TEST=ON
          cmake --build build --config Release --parallel
          .\build\Release\test_leo_runtime.exe

      - name: Build Release (Shared)
        shell: pwsh
        working-directory: runtime
        run: |
          cmake -S . -B build -G "Visual Studio 17 2022" -A x64 -DCMAKE_BUILD_TYPE=Release -DLEO_BUILD_SHARED=ON -DLEO_BUILD_TEST=ON
          cmake --build build --config Release --parallel
          .\build\Release\test_leo_runtime.exe

      - name: Package Release
        shell: pwsh
        working-directory: runtime
        run: |
          mkdir LEO-0.1.0-windows-x64-msvc\include\leo
          mkdir LEO-0.1.0-windows-x64-msvc\lib\
          xcopy include\leo LEO-0.1.0-windows-x64-msvc\include\leo /E /I /Y
          copy build\Release\leo.dll LEO-0.1.0-windows-x64-msvc\lib\
          copy build\Release\leo.lib LEO-0.1.0-windows-x64-msvc\lib\
          copy ..\LICENSE LEO-0.1.0-windows-x64-msvc\LICENSE.txt
          copy README.md LEO-0.1.0-windows-x64-msvc\
          tree /A /F LEO-0.1.0-windows-x64-msvc


      - name: Upload LEO-0.1.0-windows-x64-msvc artifact
        uses: actions/upload-artifact@v4
        with:
          name: LEO-0.1.0-windows-x64-msvc
          path: runtime/LEO-0.1.0-windows-x64-msvc
          if-no-files-found: error

      - name: Upload LEO-0.1.0-windows-x64-msvc-debug artifact
        uses: actions/upload-artifact@v4
        with:
          name: LEO-0.1.0-windows-x64-msvc-debug
          path: runtime/LEO-0.1.0-windows-x64-msvc-debug
          if-no-files-found: error

  debian12-gcc:
    name: Debian 12 (x64, gcc)
    runs-on: ubuntu-latest
    container:
      image: debian:12
    steps:
      - name: Install build tools
        run: |
          apt-get update
          DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
            build-essential cmake ninja-build pkg-config git ca-certificates
          update-ca-certificates

      - name: Checkout
        uses: actions/checkout@v4

      # Install project deps here (apt-get) if needed:
      # - name: Install project deps
      #   run: |
      #     apt-get install -y libsdl3-dev <your-deps>

      - name: Configure (CMake)
        env:
          CC: gcc
          CXX: g++
        run: |
          cmake -S . -B "$BUILD_DIR" \
            -G Ninja \
            -DCMAKE_BUILD_TYPE="$CMAKE_BUILD_TYPE" \
            -D${LIB_OPTION} \
            -D${TEST_OPTION}

      - name: Build
        run: |
          cmake --build "$BUILD_DIR" --config "$CMAKE_BUILD_TYPE" --parallel
          # Specific target example:
          # cmake --build "$BUILD_DIR" --target your_target --parallel

# Optional: upload built artifacts (uncomment & tweak)
#      - name: Upload artifact
#        uses: actions/upload-artifact@v4
#        with:
#          name: ${{ runner.os }}-${{ github.sha }}
#          path: |
#            ${{ env.BUILD_DIR }}/your_binary_or_package
#            # add more paths as needed