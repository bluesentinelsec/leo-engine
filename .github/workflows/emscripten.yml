name: Web (Emscripten - Headless Browser)

on:
  workflow_dispatch:
  push:
    paths:
      - "src/**"
      - "include/**"
      - "CMakeLists.txt"
      - "cmake/**"
      - "tests/**"
      - ".github/workflows/emscripten-browser.yml"

jobs:
  emscripten-browser-tests:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Install deps (emsdk + chromium)
        run: |
          sudo apt-get update -y
          sudo apt-get install -y build-essential cmake git python3 python3-pip curl pkg-config zip xvfb
          sudo apt-get install -y chromium-browser || true  # on 22.04 may be a snap; fallback below
          if ! command -v chromium-browser >/dev/null 2>&1; then
            # Install Google Chrome stable if chromium-browser missing
            wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
            echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
            sudo apt-get update -y
            sudo apt-get install -y google-chrome-stable
          fi
          git clone https://github.com/emscripten-core/emsdk.git
          (cd emsdk && ./emsdk install latest && ./emsdk activate latest)

      - name: Configure (build tests)
        run: |
          source ./emsdk/emsdk_env.sh
          emcmake cmake -S . -B build-wasm \
            -DCMAKE_BUILD_TYPE=Release \
            -DLEO_BUILD_SHARED=OFF \
            -DLEO_BUILD_TESTS=ON \
            -DCMAKE_C_EXTENSIONS=ON \
            -DCMAKE_CXX_EXTENSIONS=ON \
            -DCMAKE_C_FLAGS="-std=gnu11" \
            -DCMAKE_CXX_FLAGS="-std=gnu++17"

      - name: Build
        run: |
          source ./emsdk/emsdk_env.sh
          cmake --build build-wasm -j

      - name: Run tests in headless browser with emrun
        env:
          EM_TEST_BROWSER: google-chrome  # or chromium-browser if available
        run: |
          source ./emsdk/emsdk_env.sh
          HTML=build-wasm/test_leo_runtime.html
          if [ ! -f "$HTML" ]; then
            echo "Missing $HTML"; ls -l build-wasm; exit 1
          fi
          # Prefer Chrome if present, else chromium
          BROWSER=$(command -v google-chrome || command -v chromium-browser)
          echo "Using browser: $BROWSER"
          # Pass Catch2 filters in quotes if needed, e.g., "-- ~[slow]"
          # XVFB to give emrun a virtual display in CI:
          xvfb-run -a emrun --no_browser --timeout 180 --browser "$BROWSER" "$HTML"

